// Generated by view binder compiler. Do not edit!
package com.alineacion.ruedas.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.alineacion.ruedas.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityResultsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton backToMainButton;

  @NonNull
  public final RecyclerView detailsRecyclerView;

  @NonNull
  public final MaterialTextView measurementDateText;

  @NonNull
  public final MaterialButton newMeasurementButton;

  @NonNull
  public final MaterialTextView overallStatusText;

  @NonNull
  public final MaterialCardView recommendationsCard;

  @NonNull
  public final LinearLayout recommendationsHeader;

  @NonNull
  public final MaterialTextView recommendationsText;

  @NonNull
  public final MaterialTextView recommendationsToggle;

  @NonNull
  public final MaterialButton shareResultsButton;

  @NonNull
  public final MaterialCardView summaryCard;

  @NonNull
  public final MaterialTextView vehicleStatusText;

  private ActivityResultsBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton backToMainButton, @NonNull RecyclerView detailsRecyclerView,
      @NonNull MaterialTextView measurementDateText, @NonNull MaterialButton newMeasurementButton,
      @NonNull MaterialTextView overallStatusText, @NonNull MaterialCardView recommendationsCard,
      @NonNull LinearLayout recommendationsHeader, @NonNull MaterialTextView recommendationsText,
      @NonNull MaterialTextView recommendationsToggle, @NonNull MaterialButton shareResultsButton,
      @NonNull MaterialCardView summaryCard, @NonNull MaterialTextView vehicleStatusText) {
    this.rootView = rootView;
    this.backToMainButton = backToMainButton;
    this.detailsRecyclerView = detailsRecyclerView;
    this.measurementDateText = measurementDateText;
    this.newMeasurementButton = newMeasurementButton;
    this.overallStatusText = overallStatusText;
    this.recommendationsCard = recommendationsCard;
    this.recommendationsHeader = recommendationsHeader;
    this.recommendationsText = recommendationsText;
    this.recommendationsToggle = recommendationsToggle;
    this.shareResultsButton = shareResultsButton;
    this.summaryCard = summaryCard;
    this.vehicleStatusText = vehicleStatusText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityResultsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityResultsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_results, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityResultsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backToMainButton;
      MaterialButton backToMainButton = ViewBindings.findChildViewById(rootView, id);
      if (backToMainButton == null) {
        break missingId;
      }

      id = R.id.detailsRecyclerView;
      RecyclerView detailsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (detailsRecyclerView == null) {
        break missingId;
      }

      id = R.id.measurementDateText;
      MaterialTextView measurementDateText = ViewBindings.findChildViewById(rootView, id);
      if (measurementDateText == null) {
        break missingId;
      }

      id = R.id.newMeasurementButton;
      MaterialButton newMeasurementButton = ViewBindings.findChildViewById(rootView, id);
      if (newMeasurementButton == null) {
        break missingId;
      }

      id = R.id.overallStatusText;
      MaterialTextView overallStatusText = ViewBindings.findChildViewById(rootView, id);
      if (overallStatusText == null) {
        break missingId;
      }

      id = R.id.recommendationsCard;
      MaterialCardView recommendationsCard = ViewBindings.findChildViewById(rootView, id);
      if (recommendationsCard == null) {
        break missingId;
      }

      id = R.id.recommendationsHeader;
      LinearLayout recommendationsHeader = ViewBindings.findChildViewById(rootView, id);
      if (recommendationsHeader == null) {
        break missingId;
      }

      id = R.id.recommendationsText;
      MaterialTextView recommendationsText = ViewBindings.findChildViewById(rootView, id);
      if (recommendationsText == null) {
        break missingId;
      }

      id = R.id.recommendationsToggle;
      MaterialTextView recommendationsToggle = ViewBindings.findChildViewById(rootView, id);
      if (recommendationsToggle == null) {
        break missingId;
      }

      id = R.id.shareResultsButton;
      MaterialButton shareResultsButton = ViewBindings.findChildViewById(rootView, id);
      if (shareResultsButton == null) {
        break missingId;
      }

      id = R.id.summaryCard;
      MaterialCardView summaryCard = ViewBindings.findChildViewById(rootView, id);
      if (summaryCard == null) {
        break missingId;
      }

      id = R.id.vehicleStatusText;
      MaterialTextView vehicleStatusText = ViewBindings.findChildViewById(rootView, id);
      if (vehicleStatusText == null) {
        break missingId;
      }

      return new ActivityResultsBinding((ScrollView) rootView, backToMainButton,
          detailsRecyclerView, measurementDateText, newMeasurementButton, overallStatusText,
          recommendationsCard, recommendationsHeader, recommendationsText, recommendationsToggle,
          shareResultsButton, summaryCard, vehicleStatusText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
