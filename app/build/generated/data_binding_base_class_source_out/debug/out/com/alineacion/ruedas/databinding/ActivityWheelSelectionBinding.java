// Generated by view binder compiler. Do not edit!
package com.alineacion.ruedas.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.alineacion.ruedas.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWheelSelectionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton clearSelectionButton;

  @NonNull
  public final MaterialCardView frontLeftCard;

  @NonNull
  public final MaterialCardView frontRightCard;

  @NonNull
  public final MaterialCardView rearLeftCard;

  @NonNull
  public final MaterialCardView rearRightCard;

  @NonNull
  public final MaterialTextView selectionInfoText;

  @NonNull
  public final MaterialButton startMeasurementButton;

  private ActivityWheelSelectionBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton clearSelectionButton, @NonNull MaterialCardView frontLeftCard,
      @NonNull MaterialCardView frontRightCard, @NonNull MaterialCardView rearLeftCard,
      @NonNull MaterialCardView rearRightCard, @NonNull MaterialTextView selectionInfoText,
      @NonNull MaterialButton startMeasurementButton) {
    this.rootView = rootView;
    this.clearSelectionButton = clearSelectionButton;
    this.frontLeftCard = frontLeftCard;
    this.frontRightCard = frontRightCard;
    this.rearLeftCard = rearLeftCard;
    this.rearRightCard = rearRightCard;
    this.selectionInfoText = selectionInfoText;
    this.startMeasurementButton = startMeasurementButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWheelSelectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWheelSelectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_wheel_selection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWheelSelectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clearSelectionButton;
      MaterialButton clearSelectionButton = ViewBindings.findChildViewById(rootView, id);
      if (clearSelectionButton == null) {
        break missingId;
      }

      id = R.id.frontLeftCard;
      MaterialCardView frontLeftCard = ViewBindings.findChildViewById(rootView, id);
      if (frontLeftCard == null) {
        break missingId;
      }

      id = R.id.frontRightCard;
      MaterialCardView frontRightCard = ViewBindings.findChildViewById(rootView, id);
      if (frontRightCard == null) {
        break missingId;
      }

      id = R.id.rearLeftCard;
      MaterialCardView rearLeftCard = ViewBindings.findChildViewById(rootView, id);
      if (rearLeftCard == null) {
        break missingId;
      }

      id = R.id.rearRightCard;
      MaterialCardView rearRightCard = ViewBindings.findChildViewById(rootView, id);
      if (rearRightCard == null) {
        break missingId;
      }

      id = R.id.selectionInfoText;
      MaterialTextView selectionInfoText = ViewBindings.findChildViewById(rootView, id);
      if (selectionInfoText == null) {
        break missingId;
      }

      id = R.id.startMeasurementButton;
      MaterialButton startMeasurementButton = ViewBindings.findChildViewById(rootView, id);
      if (startMeasurementButton == null) {
        break missingId;
      }

      return new ActivityWheelSelectionBinding((LinearLayout) rootView, clearSelectionButton,
          frontLeftCard, frontRightCard, rearLeftCard, rearRightCard, selectionInfoText,
          startMeasurementButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
