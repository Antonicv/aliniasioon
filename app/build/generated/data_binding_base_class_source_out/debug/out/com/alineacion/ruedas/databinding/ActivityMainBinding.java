// Generated by view binder compiler. Do not edit!
package com.alineacion.ruedas.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.alineacion.ruedas.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialTextView calibrationStatusText;

  @NonNull
  public final MaterialCardView sensorStatusCard;

  @NonNull
  public final MaterialTextView sensorStatusText;

  @NonNull
  public final MaterialButton startCalibrationButton;

  @NonNull
  public final MaterialButton startMeasurementButton;

  @NonNull
  public final MaterialButton viewHistoryButton;

  private ActivityMainBinding(@NonNull ScrollView rootView,
      @NonNull MaterialTextView calibrationStatusText, @NonNull MaterialCardView sensorStatusCard,
      @NonNull MaterialTextView sensorStatusText, @NonNull MaterialButton startCalibrationButton,
      @NonNull MaterialButton startMeasurementButton, @NonNull MaterialButton viewHistoryButton) {
    this.rootView = rootView;
    this.calibrationStatusText = calibrationStatusText;
    this.sensorStatusCard = sensorStatusCard;
    this.sensorStatusText = sensorStatusText;
    this.startCalibrationButton = startCalibrationButton;
    this.startMeasurementButton = startMeasurementButton;
    this.viewHistoryButton = viewHistoryButton;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calibration_status_text;
      MaterialTextView calibrationStatusText = ViewBindings.findChildViewById(rootView, id);
      if (calibrationStatusText == null) {
        break missingId;
      }

      id = R.id.sensor_status_card;
      MaterialCardView sensorStatusCard = ViewBindings.findChildViewById(rootView, id);
      if (sensorStatusCard == null) {
        break missingId;
      }

      id = R.id.sensor_status_text;
      MaterialTextView sensorStatusText = ViewBindings.findChildViewById(rootView, id);
      if (sensorStatusText == null) {
        break missingId;
      }

      id = R.id.start_calibration_button;
      MaterialButton startCalibrationButton = ViewBindings.findChildViewById(rootView, id);
      if (startCalibrationButton == null) {
        break missingId;
      }

      id = R.id.start_measurement_button;
      MaterialButton startMeasurementButton = ViewBindings.findChildViewById(rootView, id);
      if (startMeasurementButton == null) {
        break missingId;
      }

      id = R.id.view_history_button;
      MaterialButton viewHistoryButton = ViewBindings.findChildViewById(rootView, id);
      if (viewHistoryButton == null) {
        break missingId;
      }

      return new ActivityMainBinding((ScrollView) rootView, calibrationStatusText, sensorStatusCard,
          sensorStatusText, startCalibrationButton, startMeasurementButton, viewHistoryButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
