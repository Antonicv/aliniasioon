// Generated by view binder compiler. Do not edit!
package com.alineacion.ruedas.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.alineacion.ruedas.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMeasurementBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton backButton;

  @NonNull
  public final MaterialTextView camberValue;

  @NonNull
  public final MaterialTextView casterValue;

  @NonNull
  public final MaterialButton finishButton;

  @NonNull
  public final MaterialTextView instructionText;

  @NonNull
  public final MaterialButton measureButton;

  @NonNull
  public final MaterialCardView measurementCard;

  @NonNull
  public final MaterialButton nextWheelButton;

  @NonNull
  public final MaterialCardView resultsCard;

  @NonNull
  public final MaterialTextView statusText;

  @NonNull
  public final MaterialTextView toeValue;

  @NonNull
  public final MaterialCardView wheelSelectionCard;

  @NonNull
  public final MaterialTextView wheelTitle;

  private ActivityMeasurementBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton backButton, @NonNull MaterialTextView camberValue,
      @NonNull MaterialTextView casterValue, @NonNull MaterialButton finishButton,
      @NonNull MaterialTextView instructionText, @NonNull MaterialButton measureButton,
      @NonNull MaterialCardView measurementCard, @NonNull MaterialButton nextWheelButton,
      @NonNull MaterialCardView resultsCard, @NonNull MaterialTextView statusText,
      @NonNull MaterialTextView toeValue, @NonNull MaterialCardView wheelSelectionCard,
      @NonNull MaterialTextView wheelTitle) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.camberValue = camberValue;
    this.casterValue = casterValue;
    this.finishButton = finishButton;
    this.instructionText = instructionText;
    this.measureButton = measureButton;
    this.measurementCard = measurementCard;
    this.nextWheelButton = nextWheelButton;
    this.resultsCard = resultsCard;
    this.statusText = statusText;
    this.toeValue = toeValue;
    this.wheelSelectionCard = wheelSelectionCard;
    this.wheelTitle = wheelTitle;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMeasurementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMeasurementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_measurement, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMeasurementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      MaterialButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.camberValue;
      MaterialTextView camberValue = ViewBindings.findChildViewById(rootView, id);
      if (camberValue == null) {
        break missingId;
      }

      id = R.id.casterValue;
      MaterialTextView casterValue = ViewBindings.findChildViewById(rootView, id);
      if (casterValue == null) {
        break missingId;
      }

      id = R.id.finishButton;
      MaterialButton finishButton = ViewBindings.findChildViewById(rootView, id);
      if (finishButton == null) {
        break missingId;
      }

      id = R.id.instructionText;
      MaterialTextView instructionText = ViewBindings.findChildViewById(rootView, id);
      if (instructionText == null) {
        break missingId;
      }

      id = R.id.measureButton;
      MaterialButton measureButton = ViewBindings.findChildViewById(rootView, id);
      if (measureButton == null) {
        break missingId;
      }

      id = R.id.measurementCard;
      MaterialCardView measurementCard = ViewBindings.findChildViewById(rootView, id);
      if (measurementCard == null) {
        break missingId;
      }

      id = R.id.nextWheelButton;
      MaterialButton nextWheelButton = ViewBindings.findChildViewById(rootView, id);
      if (nextWheelButton == null) {
        break missingId;
      }

      id = R.id.resultsCard;
      MaterialCardView resultsCard = ViewBindings.findChildViewById(rootView, id);
      if (resultsCard == null) {
        break missingId;
      }

      id = R.id.statusText;
      MaterialTextView statusText = ViewBindings.findChildViewById(rootView, id);
      if (statusText == null) {
        break missingId;
      }

      id = R.id.toeValue;
      MaterialTextView toeValue = ViewBindings.findChildViewById(rootView, id);
      if (toeValue == null) {
        break missingId;
      }

      id = R.id.wheelSelectionCard;
      MaterialCardView wheelSelectionCard = ViewBindings.findChildViewById(rootView, id);
      if (wheelSelectionCard == null) {
        break missingId;
      }

      id = R.id.wheelTitle;
      MaterialTextView wheelTitle = ViewBindings.findChildViewById(rootView, id);
      if (wheelTitle == null) {
        break missingId;
      }

      return new ActivityMeasurementBinding((ScrollView) rootView, backButton, camberValue,
          casterValue, finishButton, instructionText, measureButton, measurementCard,
          nextWheelButton, resultsCard, statusText, toeValue, wheelSelectionCard, wheelTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
