// Generated by view binder compiler. Do not edit!
package com.alineacion.ruedas.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.alineacion.ruedas.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCalibrationBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton cancelButton;

  @NonNull
  public final MaterialTextView instructionText;

  @NonNull
  public final MaterialButton nextButton;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final MaterialCardView statusCard;

  @NonNull
  public final MaterialTextView statusText;

  @NonNull
  public final MaterialTextView titleText;

  private ActivityCalibrationBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton cancelButton, @NonNull MaterialTextView instructionText,
      @NonNull MaterialButton nextButton, @NonNull ProgressBar progressBar,
      @NonNull MaterialCardView statusCard, @NonNull MaterialTextView statusText,
      @NonNull MaterialTextView titleText) {
    this.rootView = rootView;
    this.cancelButton = cancelButton;
    this.instructionText = instructionText;
    this.nextButton = nextButton;
    this.progressBar = progressBar;
    this.statusCard = statusCard;
    this.statusText = statusText;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCalibrationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCalibrationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_calibration, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCalibrationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelButton;
      MaterialButton cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.instructionText;
      MaterialTextView instructionText = ViewBindings.findChildViewById(rootView, id);
      if (instructionText == null) {
        break missingId;
      }

      id = R.id.nextButton;
      MaterialButton nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.statusCard;
      MaterialCardView statusCard = ViewBindings.findChildViewById(rootView, id);
      if (statusCard == null) {
        break missingId;
      }

      id = R.id.statusText;
      MaterialTextView statusText = ViewBindings.findChildViewById(rootView, id);
      if (statusText == null) {
        break missingId;
      }

      id = R.id.titleText;
      MaterialTextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new ActivityCalibrationBinding((ScrollView) rootView, cancelButton, instructionText,
          nextButton, progressBar, statusCard, statusText, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
