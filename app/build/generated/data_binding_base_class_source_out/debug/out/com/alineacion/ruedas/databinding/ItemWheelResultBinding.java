// Generated by view binder compiler. Do not edit!
package com.alineacion.ruedas.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.alineacion.ruedas.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemWheelResultBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialTextView camberStatusText;

  @NonNull
  public final MaterialTextView camberValueText;

  @NonNull
  public final LinearLayout casterLayout;

  @NonNull
  public final MaterialTextView casterStatusText;

  @NonNull
  public final MaterialTextView casterValueText;

  @NonNull
  public final MaterialTextView deviationText;

  @NonNull
  public final MaterialTextView toeStatusText;

  @NonNull
  public final MaterialTextView toeValueText;

  @NonNull
  public final MaterialTextView wheelPositionText;

  @NonNull
  public final MaterialTextView wheelStatusText;

  private ItemWheelResultBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialTextView camberStatusText, @NonNull MaterialTextView camberValueText,
      @NonNull LinearLayout casterLayout, @NonNull MaterialTextView casterStatusText,
      @NonNull MaterialTextView casterValueText, @NonNull MaterialTextView deviationText,
      @NonNull MaterialTextView toeStatusText, @NonNull MaterialTextView toeValueText,
      @NonNull MaterialTextView wheelPositionText, @NonNull MaterialTextView wheelStatusText) {
    this.rootView = rootView;
    this.camberStatusText = camberStatusText;
    this.camberValueText = camberValueText;
    this.casterLayout = casterLayout;
    this.casterStatusText = casterStatusText;
    this.casterValueText = casterValueText;
    this.deviationText = deviationText;
    this.toeStatusText = toeStatusText;
    this.toeValueText = toeValueText;
    this.wheelPositionText = wheelPositionText;
    this.wheelStatusText = wheelStatusText;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemWheelResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemWheelResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_wheel_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemWheelResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.camberStatusText;
      MaterialTextView camberStatusText = ViewBindings.findChildViewById(rootView, id);
      if (camberStatusText == null) {
        break missingId;
      }

      id = R.id.camberValueText;
      MaterialTextView camberValueText = ViewBindings.findChildViewById(rootView, id);
      if (camberValueText == null) {
        break missingId;
      }

      id = R.id.casterLayout;
      LinearLayout casterLayout = ViewBindings.findChildViewById(rootView, id);
      if (casterLayout == null) {
        break missingId;
      }

      id = R.id.casterStatusText;
      MaterialTextView casterStatusText = ViewBindings.findChildViewById(rootView, id);
      if (casterStatusText == null) {
        break missingId;
      }

      id = R.id.casterValueText;
      MaterialTextView casterValueText = ViewBindings.findChildViewById(rootView, id);
      if (casterValueText == null) {
        break missingId;
      }

      id = R.id.deviationText;
      MaterialTextView deviationText = ViewBindings.findChildViewById(rootView, id);
      if (deviationText == null) {
        break missingId;
      }

      id = R.id.toeStatusText;
      MaterialTextView toeStatusText = ViewBindings.findChildViewById(rootView, id);
      if (toeStatusText == null) {
        break missingId;
      }

      id = R.id.toeValueText;
      MaterialTextView toeValueText = ViewBindings.findChildViewById(rootView, id);
      if (toeValueText == null) {
        break missingId;
      }

      id = R.id.wheelPositionText;
      MaterialTextView wheelPositionText = ViewBindings.findChildViewById(rootView, id);
      if (wheelPositionText == null) {
        break missingId;
      }

      id = R.id.wheelStatusText;
      MaterialTextView wheelStatusText = ViewBindings.findChildViewById(rootView, id);
      if (wheelStatusText == null) {
        break missingId;
      }

      return new ItemWheelResultBinding((MaterialCardView) rootView, camberStatusText,
          camberValueText, casterLayout, casterStatusText, casterValueText, deviationText,
          toeStatusText, toeValueText, wheelPositionText, wheelStatusText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
